{"version":3,"sources":["types/tasks.js","context/task.js","component/TaskComponent.jsx","requests/weather.js","types/weather.js","context/weather.js","component/Weather/ShowWeather.jsx","component/Weather/WeatherComponent.jsx","component/Weather/Modal.jsx","component/HomeComponent.jsx","component/TaskDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_TASK","DELETE_TASK","UPDATE_TASK","COMPLETED_TASK","CHANGE_TASK","BACK_TO_TASK","initialState","tasks","complete","reducer","state","action","type","console","log","payload","deleteTask","filter","task","id","newTask","realTitle","desc","title","description","Math","floor","random","completed","localStorage","setItem","JSON","stringify","updateText","todo","trim","updatedTodos","updatedTodosComplete","updatedTask","completedTask","TaskContext","createContext","TaskProvider","children","value","useReducer","Provider","Style","backgroundColor","textAlign","padding","Task","useState","text","setText","error","setError","setUpdateText","update","setUpdate","userValue","setUserValue","useContext","taskState","dispatch","useEffect","t","parse","getItem","c","changeUpdateTaskText","e","target","taskId","style","className","onSubmit","preventDefault","length","onChange","placeholder","map","onClick","to","backToTask","getWeather","city","apiKey","a","url","axios","get","res","status","data","GET_WEATHER","weather","WeatherContext","WeatherProvider","ShowWeather","weatherState","item","index","name","main","temp","width","height","src","icon","alt","WeatherComponent","setCity","modalIsVisible","initWeather","setInterval","Modal","visible","setIsVisible","hideModal","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","HomeComponent","setmodalIsVisible","showModal","data-toggle","data-target","TaskDetails","taskIdUrl","window","location","hash","split","history","useHistory","class","push","minLength","rows","App","path","component","exact","TaskComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6079d05.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\nexport const COMPLETED_TASK = \"COMPLETED_TASK\";\r\nexport const CHANGE_TASK = \"CHANGE_TASK\";\r\nexport const BACK_TO_TASK = \"BACK_TO_TASK\";\r\n","import { createContext, useReducer } from \"react\";\r\n\r\nimport {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  UPDATE_TASK,\r\n  COMPLETED_TASK,\r\n  CHANGE_TASK,\r\n  BACK_TO_TASK,\r\n} from \"../types/tasks\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  complete: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LOCAL\": {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        tasks: [...action.payload.tasks],\r\n        complete: [...action.payload.complete],\r\n      };\r\n    }\r\n    case CHANGE_TASK: {\r\n      const deleteTask = state.tasks.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n\r\n      const newTask = {\r\n        ...action.payload.task[0],\r\n        realTitle: action.payload.desc.title,\r\n        description: action.payload.desc.desc,\r\n      };\r\n      return {\r\n        ...state,\r\n        tasks: [...deleteTask, newTask],\r\n      };\r\n    }\r\n\r\n    case ADD_TASK: {\r\n      const newTask = {\r\n        id: Math.floor(Math.random() * 100),\r\n        title: action.payload,\r\n        completed: false,\r\n      };\r\n      localStorage.setItem(\"tasks\", JSON.stringify([...state.tasks, newTask]));\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, newTask],\r\n      };\r\n    }\r\n\r\n    case UPDATE_TASK: {\r\n      const {\r\n        updateText,\r\n        todo: { id },\r\n      } = action.payload;\r\n\r\n      const task = {\r\n        id,\r\n        title: updateText.trim(),\r\n        completed: false,\r\n      };\r\n\r\n      const deleteTask = state.tasks.filter((task) => task.id !== id);\r\n      return {\r\n        ...state,\r\n        tasks: [task, ...deleteTask],\r\n      };\r\n    }\r\n\r\n    case DELETE_TASK: {\r\n      const updatedTodos = state.tasks.filter(\r\n        (task) => task.id !== action.payload\r\n      );\r\n      const updatedTodosComplete = state.complete.filter(\r\n        (task) => task.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTodos],\r\n        complete: [...updatedTodosComplete],\r\n      };\r\n    }\r\n\r\n    case BACK_TO_TASK: {\r\n      const { id, title } = action.payload;\r\n      const updatedTask = state.complete.filter((task) => task.id !== id);\r\n\r\n      const newTask = {\r\n        id,\r\n        title,\r\n        completed: false,\r\n      };\r\n\r\n      localStorage.setItem(\"tasks\", JSON.stringify([...state.tasks, newTask]));\r\n      localStorage.setItem(\"complete\", JSON.stringify([...updatedTask]));\r\n\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, newTask],\r\n        complete: [...updatedTask],\r\n      };\r\n    }\r\n\r\n    case COMPLETED_TASK: {\r\n      const { id, title } = action.payload;\r\n      const updatedTask = state.tasks.filter((task) => task.id !== id);\r\n\r\n      const completedTask = {\r\n        id,\r\n        title,\r\n        completed: true,\r\n      };\r\n      localStorage.setItem(\"tasks\", JSON.stringify([...updatedTask]));\r\n      localStorage.setItem(\r\n        \"complete\",\r\n        JSON.stringify([...state.complete, completedTask])\r\n      );\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTask],\r\n        complete: [...state.complete, completedTask],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return <TaskContext.Provider value={value}>{children}</TaskContext.Provider>;\r\n};\r\n","import { useContext, useState, Fragment, useEffect } from \"react\";\r\nimport { TaskContext } from \"../context/task\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  UPDATE_TASK,\r\n  COMPLETED_TASK,\r\n  BACK_TO_TASK,\r\n} from \"../types/tasks\";\r\nimport { FaTrash, FaCheck } from \"react-icons/fa\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { IoArrowUndoSharp } from \"react-icons/io5\";\r\nconst Task = () => {\r\n  // TaskList\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [updateText, setUpdateText] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [userValue, setUserValue] = useState(\"\");\r\n\r\n  const [taskState, dispatch] = useContext(TaskContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"object\");\r\n    let t = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    let c = JSON.parse(localStorage.getItem(\"complete\"));\r\n    console.log(t, c);\r\n    if (t === null) {\r\n      t = [];\r\n    }\r\n    if (c === null) {\r\n      c = [];\r\n    }\r\n    dispatch({\r\n      type: \"CHANGE_LOCAL\",\r\n      payload: {\r\n        tasks: t,\r\n        complete: c,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n    if (text.length !== 0) {\r\n      dispatch({ type: ADD_TASK, payload: text.trim() });\r\n      setError(false);\r\n      setText(\"\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  console.log(localStorage.getItem(\"tasks\"));\r\n  const changeTaskText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const changeUpdateTaskText = (e) => {\r\n    setUpdateText(e.target.value);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    dispatch({ type: DELETE_TASK, payload: taskId });\r\n  };\r\n\r\n  const backToTask = (task) => {\r\n    dispatch({ type: BACK_TO_TASK, payload: task });\r\n  };\r\n\r\n  const updateTask = (todo) => {\r\n    if (updateText.length !== 0) {\r\n      setUpdate(false);\r\n      setUserValue([]);\r\n      setUpdateText(\"\");\r\n      setError(false);\r\n      dispatch({ type: UPDATE_TASK, payload: { todo, updateText } });\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const completedTask = (task) => {\r\n    dispatch({ type: COMPLETED_TASK, payload: task });\r\n  };\r\n\r\n  return (\r\n    <div style={Style}>\r\n      {error ? <p className=\"error\">Le champ est vide</p> : null}\r\n      <form onSubmit={createTask}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={changeTaskText}\r\n            className=\"form-control inputT\"\r\n            placeholder=\"Nouveau titre...\"\r\n            id=\"text\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-secondary\" type={\"submit\"}>\r\n          Ajouter\r\n        </button>\r\n      </form>\r\n      <div className=\"container-tasks\">\r\n        {/* TaskList */}\r\n        <div className=\"container-todo\">\r\n          <h3>TaskList :</h3>\r\n          {taskState.tasks && !taskState.tasks.complete ? (\r\n            <Fragment>\r\n              {taskState.tasks.map((task) => {\r\n                return (\r\n                  <Fragment key={task.id}>\r\n                    {update && task.id === userValue.id ? (\r\n                      <Fragment>\r\n                        <div className=\"card border-light mb-3\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={updateText}\r\n                                onChange={changeUpdateTaskText}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nouveau titre...\"\r\n                                id=\"text\"\r\n                              />\r\n                            </div>\r\n                            <button\r\n                              className=\"btn btn-secondary\"\r\n                              onClick={() => updateTask(task, updateText)}\r\n                            >\r\n                              <FaCheck />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Fragment>\r\n                    ) : (\r\n                      <div className=\"card border-light mb-3\">\r\n                        <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">\r\n                            <NavLink\r\n                              to={`/details/${task.id}`}\r\n                              className=\"btn btn-outline-info\"\r\n                            >\r\n                              {task.title}\r\n                            </NavLink>\r\n                            <p className=\"text-muted mt-2\">{task.realTitle}</p>\r\n                            <p className=\"lead mt-2\">{task.description}</p>\r\n                          </h4>\r\n                          <p className=\"card-text\">\r\n                            <button\r\n                              className=\"btn btn-secondary\"\r\n                              onClick={() => {\r\n                                setUpdate(true);\r\n                                setUserValue(task);\r\n                              }}\r\n                            >\r\n                              <BsPencilSquare />\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-success ml-2\"\r\n                              onClick={() => completedTask(task)}\r\n                            >\r\n                              <FaCheck />\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-danger ml-2\"\r\n                              onClick={() => deleteTask(task.id)}\r\n                            >\r\n                              <FaTrash />\r\n                            </button>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Fragment>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n\r\n        {/* TaskList completed */}\r\n        <div className=\"container-todo\">\r\n          <h3>TaskListCompleted :</h3>\r\n          {taskState.complete ? (\r\n            <Fragment>\r\n              {taskState.complete.map((task) => {\r\n                return (\r\n                  <div className=\"card border-light mb-3\">\r\n                    <div className=\"card-body\">\r\n                      <p className=\"complete\">{task.title}</p>\r\n                      <p className=\"card-text\">\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          onClick={() => backToTask(task)}\r\n                        >\r\n                          <IoArrowUndoSharp />\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-danger ml-2\"\r\n                          onClick={() => deleteTask(task.id)}\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Style = {\r\n  backgroundColor: \"#eee\",\r\n  textAlign: \"center\",\r\n  padding: \"1em\",\r\n  // maxWidth: \"90%\",\r\n};\r\n\r\nexport default Task;\r\n","import axios from \"axios\";\r\nconst getWeather = async (city, apiKey) => {\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=fr`;\r\n\r\n  // Il faut gérer les erreurs ici\r\n\r\n  const res = await axios.get(url);\r\n  if (res.status === 200) {\r\n    return await res.data;\r\n  }\r\n};\r\n\r\nexport { getWeather };\r\n","export const GET_WEATHER = \"GET_WEATHER\";\r\n","import { createContext, useReducer } from \"react\";\r\nimport { GET_WEATHER } from \"../types/weather\";\r\n\r\nconst initialState = {\r\n  weather: {},\r\n  apiKey: \"f1feb914336310d05e871b3de9fef93f\",\r\n  city: \"Lille\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER: {\r\n      const weather = action.payload;\r\n      return {\r\n        ...state,\r\n        weather,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <WeatherContext.Provider value={value}>{children}</WeatherContext.Provider>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { WeatherContext } from \"../../context/weather\";\r\n\r\nconst ShowWeather = () => {\r\n  const [weatherState] = useContext(WeatherContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      {weatherState.weather.weather ? (\r\n        <div>\r\n          {weatherState.weather.weather.map((item, index) => {\r\n            return (\r\n              <div className=\"\" key={index}>\r\n                <h3 className=\"card-header\">Weather</h3>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{weatherState.weather.name}</h5>\r\n                  <h6 className=\"card-subtitle text-muted\">\r\n                    {item.description} - {weatherState.weather.main.temp}°C\r\n                  </h6>\r\n                </div>\r\n                <img\r\n                  className=\"d-block user-select-none m-auto\"\r\n                  width=\"200\"\r\n                  height=\"200\"\r\n                  src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`}\r\n                  alt=\"an icon\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowWeather;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { getWeather } from \"../../requests/weather\";\r\nimport ShowWeather from \"./ShowWeather\";\r\nimport { WeatherContext } from \"../../context/weather\";\r\nimport { GET_WEATHER } from \"../../types/weather\";\r\n\r\nconst WeatherComponent = ({ setCity, city, modalIsVisible }) => {\r\n  const [weatherState, dispatch] = useContext(WeatherContext);\r\n\r\n  useEffect(() => {\r\n    const initWeather = async () => {\r\n      const data = await getWeather(city, weatherState.apiKey);\r\n      dispatch({ type: GET_WEATHER, payload: data });\r\n    };\r\n\r\n    initWeather(city);\r\n\r\n    setInterval(() => {\r\n      initWeather(city);\r\n    }, 3600000);\r\n  }, [modalIsVisible]);\r\n\r\n  return (\r\n    <div>\r\n      <ShowWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { getWeather } from \"../../requests/weather\";\r\nimport { WeatherContext } from \"../../context/weather\";\r\nimport { GET_WEATHER } from \"../../types/weather\";\r\n\r\nconst Modal = ({ visible, setIsVisible, setCity, city }) => {\r\n  // const [isVisible, setIsVisible] = useState(visible);\r\n  const [weatherState, dispatch] = useContext(WeatherContext);\r\n\r\n  const hideModal = () => {\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const changeCity = (e) => {\r\n    e.preventDefault();\r\n    hideModal();\r\n    const data = getWeather(city, weatherState.apiKey);\r\n    dispatch({ type: GET_WEATHER, payload: data });\r\n  };\r\n\r\n  const setNewText = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal fade ${visible ? \"show\" : \"\"} `}\r\n      id=\"locModal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"locModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"locModalLabel\">\r\n              Choose Location\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form id=\"w-form\" onSubmit={changeCity}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">City</label>\r\n                <input\r\n                  onChange={setNewText}\r\n                  value={city}\r\n                  type=\"text\"\r\n                  id=\"city\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={hideModal}\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  id=\"w-change-btn\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Save changes\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import WeatherComponent from \"./Weather/WeatherComponent\";\r\nimport { useState, Fragment } from \"react\";\r\nimport { WeatherProvider } from \"../context/weather\";\r\nimport Modal from \"./Weather/Modal\";\r\n\r\nconst HomeComponent = () => {\r\n  const [modalIsVisible, setmodalIsVisible] = useState(false);\r\n  const [city, setCity] = useState(\"Paris\");\r\n  const showModal = () => {\r\n    setmodalIsVisible(!modalIsVisible);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <WeatherProvider>\r\n        <div className=\"container card mb-3 p-1 cardWeather\">\r\n          <WeatherComponent\r\n            setCity={setCity}\r\n            city={city}\r\n            modalIsVisible={modalIsVisible}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#locModal\"\r\n            onClick={showModal}\r\n          >\r\n            Change Location\r\n          </button>\r\n        </div>\r\n        <Modal\r\n          visible={modalIsVisible}\r\n          setIsVisible={showModal}\r\n          setCity={setCity}\r\n          city={city}\r\n        />\r\n      </WeatherProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import { useContext, useState } from \"react\";\r\nimport { TaskContext } from \"../context/task\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { CHANGE_TASK } from \"../types/tasks\";\r\n\r\nconst TaskDetails = () => {\r\n  const [error, setError] = useState(false);\r\n  const [taskState, dispatch] = useContext(TaskContext);\r\n  const { tasks } = taskState;\r\n  const taskIdUrl = window.location.hash.split(\"/\")[3];\r\n  const task = tasks.filter((t) => +t.id === +taskIdUrl);\r\n\r\n  let history = useHistory();\r\n\r\n  const createTitle = (e) => {\r\n    e.preventDefault();\r\n    if (e.target[0].value.length === 0 || e.target[1].value.length === 0) {\r\n      return setError(true);\r\n    }\r\n    setError(false);\r\n    dispatch({\r\n      type: CHANGE_TASK,\r\n      payload: {\r\n        id: +taskIdUrl,\r\n        desc: {\r\n          title: e.target[0].value,\r\n          desc: e.target[1].value,\r\n        },\r\n        task,\r\n      },\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"container col-lg-8 offset-lg-1\">\r\n      <NavLink to=\"/\" className=\"btn btn_link\">\r\n        Revenir à la liste\r\n      </NavLink>\r\n      {error ? (\r\n        <div class=\"alert alert-dismissible alert-danger\">\r\n          Les champs ne doivent pas être vides\r\n        </div>\r\n      ) : null}\r\n      <h1>{task[0].title}</h1>\r\n      <form onSubmit={createTitle}>\r\n        <div className=\"form-group\">\r\n          <label className=\"col-form-label\" htmlFor=\"inputDefault\">\r\n            Titre\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder={task[0].realTitle}\r\n            minLength=\"1\"\r\n            id=\"inputDefault\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group mt-5\">\r\n          <label htmlFor=\"exampleTextarea\">Description</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleTextarea\"\r\n            rows=\"3\"\r\n            placeholder={task[0].description}\r\n            minLength=\"1\"\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Sauvegarder\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;\r\n","import \"./App.css\";\nimport TaskComponent from \"./component/TaskComponent\";\nimport HomeComponent from \"./component/HomeComponent\";\nimport TaskDetails from \"./component/TaskDetails.jsx\";\nimport { TaskProvider } from \"./context/task\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeComponent />\n      <Switch>\n        <TaskProvider>\n          <Route path=\"/details/:id\" component={TaskDetails} />\n          <Route exact path=\"/\" component={TaskComponent} />\n        </TaskProvider>\n        /{\" \"}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router basename=\"/todo\">\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}