{"version":3,"sources":["types/tasks.js","context/task.js","component/TaskComponent.jsx","requests/weather.js","types/weather.js","context/weather.js","component/Weather/ShowWeather.jsx","component/Weather/WeatherComponent.jsx","component/Weather/Modal.jsx","component/HomeComponent.jsx","component/TaskDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_TASK","DELETE_TASK","UPDATE_TASK","COMPLETED_TASK","CHANGE_TASK","BACK_TO_TASK","initialState","tasks","complete","reducer","state","action","type","deleteTask","filter","task","id","payload","newTask","realTitle","desc","title","description","Math","floor","random","completed","updateText","todo","trim","updatedTodos","updatedTodosComplete","updatedTask","completedTask","TaskContext","createContext","TaskProvider","children","value","useReducer","Provider","Style","backgroundColor","textAlign","padding","Task","useState","text","setText","error","setError","setUpdateText","update","setUpdate","userValue","setUserValue","useContext","taskState","dispatch","changeUpdateTaskText","e","target","taskId","style","className","onSubmit","preventDefault","length","onChange","placeholder","map","onClick","to","backToTask","getWeather","city","apiKey","a","url","axios","get","res","status","data","GET_WEATHER","weather","WeatherContext","WeatherProvider","ShowWeather","weatherState","item","index","name","main","temp","width","height","src","icon","alt","WeatherComponent","useEffect","initWeather","setInterval","Modal","visible","setIsVisible","setCity","hideModal","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","HomeComponent","modalIsVisible","setmodalIsVisible","showModal","data-toggle","data-target","TaskDetails","taskIdUrl","window","location","hash","split","t","console","log","minLength","rows","App","path","component","exact","TaskComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc5c84f.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\nexport const COMPLETED_TASK = \"COMPLETED_TASK\";\r\nexport const CHANGE_TASK = \"CHANGE_TASK\";\r\nexport const BACK_TO_TASK = \"BACK_TO_TASK\";\r\n","import { createContext, useReducer } from \"react\";\r\n\r\nimport {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  UPDATE_TASK,\r\n  COMPLETED_TASK,\r\n  CHANGE_TASK,\r\n  BACK_TO_TASK,\r\n} from \"../types/tasks\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  complete: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_TASK: {\r\n      const deleteTask = state.tasks.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n\r\n      const newTask = {\r\n        ...action.payload.task[0],\r\n        realTitle: action.payload.desc.title,\r\n        description: action.payload.desc.desc,\r\n      };\r\n      return {\r\n        ...state,\r\n        tasks: [...deleteTask, newTask],\r\n      };\r\n    }\r\n\r\n    case ADD_TASK: {\r\n      const newTask = {\r\n        id: Math.floor(Math.random() * 100),\r\n        title: action.payload,\r\n        completed: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, newTask],\r\n      };\r\n    }\r\n\r\n    case UPDATE_TASK: {\r\n      const {\r\n        updateText,\r\n        todo: { id },\r\n      } = action.payload;\r\n\r\n      const task = {\r\n        id,\r\n        title: updateText.trim(),\r\n        completed: false,\r\n      };\r\n\r\n      const deleteTask = state.tasks.filter((task) => task.id !== id);\r\n      return {\r\n        ...state,\r\n        tasks: [task, ...deleteTask],\r\n      };\r\n    }\r\n\r\n    case DELETE_TASK: {\r\n      const updatedTodos = state.tasks.filter(\r\n        (task) => task.id !== action.payload\r\n      );\r\n      const updatedTodosComplete = state.complete.filter(\r\n        (task) => task.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTodos],\r\n        complete: [...updatedTodosComplete],\r\n      };\r\n    }\r\n\r\n    case BACK_TO_TASK: {\r\n      const { id, title } = action.payload;\r\n      const updatedTask = state.complete.filter((task) => task.id !== id);\r\n\r\n      const newTask = {\r\n        id,\r\n        title,\r\n        completed: false,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, newTask],\r\n        complete: [...updatedTask],\r\n      };\r\n    }\r\n\r\n    case COMPLETED_TASK: {\r\n      const { id, title } = action.payload;\r\n      const updatedTask = state.tasks.filter((task) => task.id !== id);\r\n\r\n      const completedTask = {\r\n        id,\r\n        title,\r\n        completed: true,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTask],\r\n        complete: [...state.complete, completedTask],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return <TaskContext.Provider value={value}>{children}</TaskContext.Provider>;\r\n};\r\n","import { useContext, useState, Fragment } from \"react\";\r\nimport { TaskContext } from \"../context/task\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  UPDATE_TASK,\r\n  COMPLETED_TASK,\r\n  BACK_TO_TASK,\r\n} from \"../types/tasks\";\r\nimport { FaTrash, FaCheck } from \"react-icons/fa\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { IoArrowUndoSharp } from \"react-icons/io5\";\r\nconst Task = () => {\r\n  // TaskList\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [updateText, setUpdateText] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [userValue, setUserValue] = useState(\"\");\r\n\r\n  const [taskState, dispatch] = useContext(TaskContext);\r\n\r\n  const createTask = (e) => {\r\n    e.preventDefault();\r\n    if (text.length !== 0) {\r\n      dispatch({ type: ADD_TASK, payload: text.trim() });\r\n      setError(false);\r\n      setText(\"\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const changeTaskText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const changeUpdateTaskText = (e) => {\r\n    setUpdateText(e.target.value);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    dispatch({ type: DELETE_TASK, payload: taskId });\r\n  };\r\n\r\n  const backToTask = (task) => {\r\n    dispatch({ type: BACK_TO_TASK, payload: task });\r\n  };\r\n\r\n  const updateTask = (todo) => {\r\n    if (updateText.length !== 0) {\r\n      setUpdate(false);\r\n      setUserValue([]);\r\n      setUpdateText(\"\");\r\n      setError(false);\r\n      dispatch({ type: UPDATE_TASK, payload: { todo, updateText } });\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const completedTask = (task) => {\r\n    dispatch({ type: COMPLETED_TASK, payload: task });\r\n  };\r\n\r\n  return (\r\n    <div style={Style}>\r\n      {error ? <p className=\"error\">Le champ est vide</p> : null}\r\n      <form onSubmit={createTask}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={changeTaskText}\r\n            className=\"form-control inputT\"\r\n            placeholder=\"Nouveau titre...\"\r\n            id=\"text\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-secondary\" type={\"submit\"}>\r\n          Ajouter\r\n        </button>\r\n      </form>\r\n      <div className=\"container-tasks\">\r\n        {/* TaskList */}\r\n        <div className=\"container-todo\">\r\n          <h3>TaskList :</h3>\r\n          {taskState.tasks && !taskState.tasks.complete ? (\r\n            <Fragment>\r\n              {taskState.tasks.map((task) => {\r\n                return (\r\n                  <Fragment key={task.id}>\r\n                    {update && task.id === userValue.id ? (\r\n                      <Fragment>\r\n                        <div className=\"card border-light mb-3\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={updateText}\r\n                                onChange={changeUpdateTaskText}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nouveau titre...\"\r\n                                id=\"text\"\r\n                              />\r\n                            </div>\r\n                            <button\r\n                              className=\"btn btn-secondary\"\r\n                              onClick={() => updateTask(task, updateText)}\r\n                            >\r\n                              <FaCheck />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Fragment>\r\n                    ) : (\r\n                      <div className=\"card border-light mb-3\">\r\n                        <div className=\"card-body\">\r\n                          <h4 className=\"card-title\">\r\n                            <NavLink\r\n                              to={`/details/${task.id}`}\r\n                              className=\"btn btn-outline-info\"\r\n                            >\r\n                              {task.title}\r\n                            </NavLink>\r\n                            <p className=\"text-muted mt-2\">{task.realTitle}</p>\r\n                            <p className=\"lead mt-2\">{task.description}</p>\r\n                          </h4>\r\n                          <p className=\"card-text\">\r\n                            <button\r\n                              className=\"btn btn-secondary\"\r\n                              onClick={() => {\r\n                                setUpdate(true);\r\n                                setUserValue(task);\r\n                              }}\r\n                            >\r\n                              <BsPencilSquare />\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-success ml-2\"\r\n                              onClick={() => completedTask(task)}\r\n                            >\r\n                              <FaCheck />\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-danger ml-2\"\r\n                              onClick={() => deleteTask(task.id)}\r\n                            >\r\n                              <FaTrash />\r\n                            </button>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Fragment>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n\r\n        {/* TaskList completed */}\r\n        <div className=\"container-todo\">\r\n          <h3>TaskListCompleted :</h3>\r\n          {taskState.complete ? (\r\n            <Fragment>\r\n              {taskState.complete.map((task) => {\r\n                return (\r\n                  <div className=\"card border-light mb-3\">\r\n                    <div className=\"card-body\">\r\n                      <p className=\"complete\">{task.title}</p>\r\n                      <p className=\"card-text\">\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          onClick={() => backToTask(task)}\r\n                        >\r\n                          <IoArrowUndoSharp />\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-danger ml-2\"\r\n                          onClick={() => deleteTask(task.id)}\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Style = {\r\n  backgroundColor: \"#eee\",\r\n  textAlign: \"center\",\r\n  padding: \"1em\",\r\n  // maxWidth: \"90%\",\r\n};\r\n\r\nexport default Task;\r\n","import axios from \"axios\";\r\nconst getWeather = async (city, apiKey) => {\r\n  const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=fr`;\r\n\r\n  // Il faut gérer les erreurs ici\r\n\r\n  const res = await axios.get(url);\r\n  if (res.status === 200) {\r\n    return await res.data;\r\n  }\r\n};\r\n\r\nexport { getWeather };\r\n","export const GET_WEATHER = \"GET_WEATHER\";\r\n","import { createContext, useReducer } from \"react\";\r\nimport { GET_WEATHER } from \"../types/weather\";\r\n\r\nconst initialState = {\r\n  weather: {},\r\n  apiKey: \"f1feb914336310d05e871b3de9fef93f\",\r\n  city: \"Lille\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER: {\r\n      const weather = action.payload;\r\n      return {\r\n        ...state,\r\n        weather,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <WeatherContext.Provider value={value}>{children}</WeatherContext.Provider>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { WeatherContext } from \"../../context/weather\";\r\n\r\nconst ShowWeather = () => {\r\n  const [weatherState] = useContext(WeatherContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      {weatherState.weather.weather ? (\r\n        <div>\r\n          {weatherState.weather.weather.map((item, index) => {\r\n            return (\r\n              <div className=\"\" key={index}>\r\n                <h3 className=\"card-header\">Weather</h3>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{weatherState.weather.name}</h5>\r\n                  <h6 className=\"card-subtitle text-muted\">\r\n                    {item.description} - {weatherState.weather.main.temp}°C\r\n                  </h6>\r\n                </div>\r\n                <img\r\n                  className=\"d-block user-select-none m-auto\"\r\n                  width=\"200\"\r\n                  height=\"200\"\r\n                  src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`}\r\n                  alt=\"an icon\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowWeather;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { getWeather } from \"../../requests/weather\";\r\nimport ShowWeather from \"./ShowWeather\";\r\nimport { WeatherContext } from \"../../context/weather\";\r\nimport { GET_WEATHER } from \"../../types/weather\";\r\n\r\nconst WeatherComponent = () => {\r\n  const [weatherState, dispatch] = useContext(WeatherContext);\r\n\r\n  useEffect(() => {\r\n    const initWeather = async () => {\r\n      const data = await getWeather(weatherState.city, weatherState.apiKey);\r\n      dispatch({ type: GET_WEATHER, payload: data });\r\n    };\r\n\r\n    initWeather();\r\n\r\n    setInterval(() => {\r\n      initWeather();\r\n    }, 3600000);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ShowWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { Component, isValidElement, useState } from \"react\";\r\n\r\nconst Modal = ({ visible, setIsVisible }) => {\r\n  // const [isVisible, setIsVisible] = useState(visible);\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const hideModal = () => {\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const changeCity = (e) => {\r\n    e.preventDefault();\r\n    hideModal();\r\n  };\r\n\r\n  const setNewText = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal fade ${visible ? \"show\" : \"\"} `}\r\n      id=\"locModal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"locModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"locModalLabel\">\r\n              Choose Location\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form id=\"w-form\" onSubmit={changeCity}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">City</label>\r\n                <input\r\n                  onChange={setNewText}\r\n                  value={city}\r\n                  type=\"text\"\r\n                  id=\"city\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={hideModal}\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  id=\"w-change-btn\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Save changes\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import WeatherComponent from \"./Weather/WeatherComponent\";\r\nimport { useState, Fragment } from \"react\";\r\nimport { WeatherProvider } from \"../context/weather\";\r\nimport Modal from \"./Weather/Modal\";\r\n\r\nconst HomeComponent = () => {\r\n  const [modalIsVisible, setmodalIsVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setmodalIsVisible(!modalIsVisible);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container card mb-3 p-1 cardWeather\">\r\n        <WeatherProvider>\r\n          <WeatherComponent />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#locModal\"\r\n            onClick={showModal}\r\n          >\r\n            Change Location\r\n          </button>\r\n        </WeatherProvider>\r\n      </div>\r\n      <Modal visible={modalIsVisible} setIsVisible={showModal} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeComponent;\r\n","import { useContext } from \"react\";\r\nimport { TaskContext } from \"../context/task\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CHANGE_TASK } from \"../types/tasks\";\r\n\r\nconst TaskDetails = () => {\r\n  const [taskState, dispatch] = useContext(TaskContext);\r\n  const { tasks } = taskState;\r\n  const taskIdUrl = window.location.hash.split(\"/\")[3];\r\n  const task = tasks.filter((t) => +t.id === +taskIdUrl);\r\n\r\n  const createTitle = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    dispatch({\r\n      type: CHANGE_TASK,\r\n      payload: {\r\n        id: +taskIdUrl,\r\n        desc: { title: e.target[0].value, desc: e.target[1].value },\r\n        task,\r\n      },\r\n    });\r\n  };\r\n  console.log(task);\r\n  return (\r\n    <div className=\"container col-lg-8 offset-lg-1\">\r\n      <NavLink to=\"/\" className=\"btn btn_link\">\r\n        Revenir à la liste\r\n      </NavLink>\r\n      <h1>{task[0].title}</h1>\r\n      <form onSubmit={createTitle}>\r\n        <div className=\"form-group\">\r\n          <label className=\"col-form-label\" htmlFor=\"inputDefault\">\r\n            Titre\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder={task[0].realTitle}\r\n            minLength=\"1\"\r\n            id=\"inputDefault\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group mt-5\">\r\n          <label htmlFor=\"exampleTextarea\">Description</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleTextarea\"\r\n            rows=\"3\"\r\n            placeholder={task[0].description}\r\n            minLength=\"1\"\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Sauvegarder\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;\r\n","import \"./App.css\";\nimport TaskComponent from \"./component/TaskComponent\";\nimport HomeComponent from \"./component/HomeComponent\";\nimport TaskDetails from \"./component/TaskDetails.jsx\";\nimport { TaskProvider } from \"./context/task\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeComponent />\n      <Switch>\n        <TaskProvider>\n          <Route path=\"/details/:id\" component={TaskDetails} />\n          <Route exact path=\"/\" component={TaskComponent} />\n        </TaskProvider>\n        /{\" \"}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router basename=\"/todo\">\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}